include "utils/executor.bzz"
include "utils/types.bzz"
include "vec2.bzz"

function tick(stig){
    var leader = stig.get("leader");

    if(leader != id and leader != nil){
        log("Trying to get leader: ", leader)
        var neighbor = neighbors.get(leader);

        if(is_table(neighbor)){
            var goal = math.vec2.newp(neighbor.distance - 0.5, neighbor.azimuth);
            log("Moving to leader: ", leader, " at x:", goal.x, " y:", goal.y);
            call_host_function(id, "moveBy", {.0 = goal.x, .1 = goal.y});
        }
        else{
            log("Neighbor not found!");
        }
    }
}

function create_exec(step_count) {
    stig = stigmergy.create(1);

    var set_leader_id_description = {.0 = {.leader_id=types.INT}}
    var set_leader_id = function(stig){stig.put("leader", leader_id)}
    register_closure("setLeader", set_leader_id_description, stig)

    exec = executor.new(step_count, tick, stig);
    return exec;
}
