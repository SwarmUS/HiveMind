include "utils/executor.bzz"

counter = 0

function greater_conflict_resolver(key, local, remote) {
    log("conflict called, remote:", remote, ": ", remote.data, " local:", local, ": ", remote.data);
    if(remote.robot < local.robot) {
        log("Choosed local: ", local.robot, remote.robot);
        return local;
    }
    log("Choosed remote: ", local.robot, remote.robot);
    return remote;
}

function tick(param) {
    counter = counter + 1
    table = {}
    log("Loop: ", stig.get("key"));
    log("Table: ", table);
    stig.put("key", counter);
}

function init() {
    stig = stigmergy.create(1);
    exec = executor.new(40, tick, nil);

    stig.put("key", counter);
    log("Init: ", stig.get("key") ," Id: ", id);
    stig.onconflict(greater_conflict_resolver);
}

function step() {
    exec.step();
}
